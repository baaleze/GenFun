{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/fakewords/fakewords.component.html","./src/app/grammar/grammar.component.html","./src/app/loot/loot.component.html","./src/app/notabot/notabot.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/fakewords/fakewords.component.scss","./src/app/fakewords/fakewords.component.ts","./src/app/grammar/grammar.component.scss","./src/app/grammar/grammar.component.ts","./src/app/loot/loot.component.scss","./src/app/loot/loot.component.ts","./src/app/loot/model/item.ts","./src/app/loot/model/lootgen.ts","./src/app/loot/model/price.ts","./src/app/loot/model/rule/noungroup.ts","./src/app/loot/model/rule/numberednoungroup.ts","./src/app/loot/model/rule/optional.ts","./src/app/loot/model/rule/or.ts","./src/app/loot/model/rule/qualificatifgroup.ts","./src/app/loot/model/rule/sequence.ts","./src/app/loot/model/rule/stringtoken.ts","./src/app/loot/model/terminal/adjective.ts","./src/app/loot/model/terminal/gear.ts","./src/app/loot/model/terminal/material.ts","./src/app/loot/model/terminal/modifier.ts","./src/app/loot/model/terminal/noun.ts","./src/app/loot/model/terminal/qualificatif.ts","./src/app/loot/model/terminal/terminal.ts","./src/app/loot/model/terminal/terminalgenerator.ts","./src/app/loot/model/terminal/terminaltype.ts","./src/app/markov/endingchecker.ts","./src/app/markov/markovgenerator.ts","./src/app/markov/markovwordgenerator.ts","./src/app/markov/probas.ts","./src/app/notabot/notabot.component.scss","./src/app/notabot/notabot.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n    <ul>\\n        <li *ngFor=\\\"let tab of tabs\\\" [class.active]=\\\"currentTab === tab\\\"><a  (click)=\\\"currentTab = tab\\\">{{tab}}</a></li>\\n    </ul>\\n<div class=\\\"content\\\">\\n<app-fakewords *ngIf=\\\"currentTab === 'MARKOV'\\\"></app-fakewords>\\n<app-notabot *ngIf=\\\"currentTab === 'BOT'\\\"></app-notabot>\\n<app-loot *ngIf=\\\"currentTab === 'LOOT'\\\"></app-loot>\\n<app-grammar *ngIf=\\\"currentTab === 'GRAMMAR'\\\"></app-grammar>\\n</div>\\n\"","module.exports = \"\\n<div class=\\\"generation\\\">\\n    <div class=\\\"btn-container\\\">\\n    <a (click)=\\\"generate(10)\\\" class=\\\"btn\\\">GENERATE</a>\\n    <select [(ngModel)]=\\\"s\\\" (change)=\\\"updateGenSetting()\\\">\\n        <option [value]=\\\"setting\\\" *ngFor=\\\"let setting of settingList\\\">{{setting}}</option>\\n    </select>\\n</div>\\n    <p *ngFor=\\\"let w of words\\\" [@appear] >{{w}}</p>\\n</div>\\n\"","module.exports = \"\\n<div class=\\\"generation\\\">\\n    <div class=\\\"btn-container\\\">\\n        <a (click)=\\\"generate(10)\\\" class=\\\"btn\\\">GENERATE</a>\\n        <select [(ngModel)]=\\\"selectedGrammar\\\" (change)=\\\"changeGrammar()\\\">\\n            <option [value]=\\\"g\\\" *ngFor=\\\"let g of grammars\\\">{{g}}</option>\\n        </select>\\n    </div>\\n    <div *ngFor=\\\"let p of phrases\\\" [@appear] [innerHTML]=\\\"p\\\" class=\\\"line\\\"></div>\\n</div>\\n\\n\"","module.exports = \"\\n<div class=\\\"generation\\\">\\n    <div class=\\\"btn-container\\\">\\n        <a (click)=\\\"generateItems(10)\\\" class=\\\"btn\\\">GENERATE</a>\\n    </div>\\n    <div *ngFor=\\\"let i of items\\\" [@appear] class=\\\"item\\\">\\n        <div *ngIf=\\\"i.uniqueName\\\" class=\\\"unique\\\">{{i.uniqueName}}</div>\\n        <div class=\\\"name\\\">{{ i.name }} <span class=\\\"price tooltip\\\" >\\n            {{i.price.compute() | number: '1.0-2'}} or\\n            <span class=\\\"tooltip-text\\\" [innerHTML]=\\\"i.price.detail()\\\"></span>\\n        </span></div>\\n        <div>\\n            <span class=\\\"stat\\\" *ngFor=\\\"let stat of i.stats | keyvalue\\\">{{i.getStatString(stat.key)}}</span>\\n        </div>\\n        <div class=\\\"power\\\">\\n            {{i.powers.join(', ')}}\\n        </div>\\n        <div class=\\\"tag\\\">\\n            [ {{i.tags.join(' | ')}} ]\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\\n<div class=\\\"generation\\\">\\n    <div class=\\\"btn-container\\\">\\n    <a (click)=\\\"generate(10)\\\" class=\\\"btn\\\">GENERATE</a>\\n</div>\\n    <p *ngFor=\\\"let w of words\\\" [@appear] >{{w}}</p>\\n</div>\\n\"","module.exports = \"ul {\\n  list-style-type: none;\\n  margin: 0;\\n  padding: 0;\\n  overflow: hidden;\\n  background-color: #333;\\n}\\n\\nli {\\n  float: left;\\n}\\n\\nli.active {\\n  background-color: #111;\\n}\\n\\nli a {\\n  display: block;\\n  color: white;\\n  text-align: center;\\n  padding: 14px 16px;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n\\n/* Change the link color to #111 (black) on hover */\\n\\nli a:hover {\\n  background-color: #111;\\n}\\n\\n.content {\\n  height: calc(100% - 48px);\\n  background-color: #111;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Zkcm91bWFndWV0L0NPREUvbWUvZ2VuLXdlYi9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7QUNDSjs7QURFRTtFQUNFLFdBQUE7QUNDSjs7QURBSTtFQUNFLHNCQUFBO0FDRU47O0FERUU7RUFDRSxjQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLGVBQUE7QUNDSjs7QURFRSxtREFBQTs7QUFDQTtFQUNFLHNCQUFBO0FDQ0o7O0FERUk7RUFDRSx5QkFBQTtFQUNBLHNCQUFBO0FDQ04iLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgfVxuICBcbiAgbGkge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgICYuYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxMTE7XG4gICAgfVxuICB9XG4gIFxuICBsaSBhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDE0cHggMTZweDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIFxuICAvKiBDaGFuZ2UgdGhlIGxpbmsgY29sb3IgdG8gIzExMSAoYmxhY2spIG9uIGhvdmVyICovXG4gIGxpIGE6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMTE7XG4gIH1cblxuICAgIC5jb250ZW50IHtcbiAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gNDhweCk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTExO1xuICAgIH0iLCJ1bCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xufVxuXG5saSB7XG4gIGZsb2F0OiBsZWZ0O1xufVxubGkuYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzExMTtcbn1cblxubGkgYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMTRweCAxNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLyogQ2hhbmdlIHRoZSBsaW5rIGNvbG9yIHRvICMxMTEgKGJsYWNrKSBvbiBob3ZlciAqL1xubGkgYTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMTE7XG59XG5cbi5jb250ZW50IHtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSA0OHB4KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzExMTtcbn0iXX0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  tabs: Tab[] = [\n    'MARKOV', 'LOOT', 'GRAMMAR', 'BOT'\n  ];\n  currentTab: Tab = 'MARKOV';\n\n}\n\nexport type Tab = 'MARKOV' | 'LOOT' | 'GRAMMAR' | 'BOT';\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FakewordsComponent } from './fakewords/fakewords.component';\nimport { LootComponent } from './loot/loot.component';\nimport { GrammarComponent } from './grammar/grammar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NotabotComponent } from './notabot/notabot.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FakewordsComponent,\n    LootComponent,\n    GrammarComponent,\n    NotabotComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".generation {\\n  text-align: center;\\n  height: calc(100% - 161px);\\n  padding: 60px;\\n  font-size: 25px;\\n}\\n.generation .btn-container {\\n  margin-bottom: 50px;\\n}\\n.generation .btn-container select {\\n  font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Zkcm91bWFndWV0L0NPREUvbWUvZ2VuLXdlYi9zcmMvYXBwL2Zha2V3b3Jkcy9mYWtld29yZHMuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Zha2V3b3Jkcy9mYWtld29yZHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtFQUNBLDBCQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7QUNDSjtBRENJO0VBQ0ksbUJBQUE7QUNDUjtBREFRO0VBQ0ksZUFBQTtBQ0VaIiwiZmlsZSI6InNyYy9hcHAvZmFrZXdvcmRzL2Zha2V3b3Jkcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5nZW5lcmF0aW9uIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNjFweCk7XG4gICAgcGFkZGluZzogNjBweDtcbiAgICBmb250LXNpemU6IDI1cHg7XG5cbiAgICAuYnRuLWNvbnRhaW5lciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgICAgIHNlbGVjdCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLmdlbmVyYXRpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gMTYxcHgpO1xuICBwYWRkaW5nOiA2MHB4O1xuICBmb250LXNpemU6IDI1cHg7XG59XG4uZ2VuZXJhdGlvbiAuYnRuLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG4uZ2VuZXJhdGlvbiAuYnRuLWNvbnRhaW5lciBzZWxlY3Qge1xuICBmb250LXNpemU6IDMwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MarkovCharGenerator } from '../markov/markovgenerator';\nimport { HttpClient } from '@angular/common/http';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-fakewords',\n  templateUrl: './fakewords.component.html',\n  styleUrls: ['./fakewords.component.scss'],\n  animations: [\n    trigger('appear', [\n      transition(':enter', [\n        style({opacity: 0}),\n        animate('1s')\n      ])\n    ])\n  ]\n})\nexport class FakewordsComponent implements OnInit {\n\n  public settings = {\n    'french cities': { file: 'villes_france.csv', factor: 4, end: '$', maxLenght: 20 },\n    'french words': { file: 'french.txt', factor: 4, end: '$', maxLenght: 12 },\n    'french names': { file: 'prenoms.txt', factor: 3, end: '$', maxLenght: 8},\n    'english words': { file: 'english.txt', factor: 4, end: '$', maxLenght: 10 },\n  };\n  public settingList = [\n    'french cities',\n    'french words',\n    'french names',\n    'english words'\n  ];\n  public s: string;\n\n  public words: string[] = [];\n\n  public markov: MarkovCharGenerator;\n\n  constructor(private http: HttpClient) {\n    this.s = this.settingList[0];\n    this.markov = new MarkovCharGenerator(this.settings[this.s].factor, this.settings[this.s].end, this.settings[this.s].maxLenght);\n  }\n\n  ngOnInit() {\n  }\n\n  public updateGenSetting() {\n    this.markov = new MarkovCharGenerator(this.settings[this.s].factor, this.settings[this.s].end, this.settings[this.s].maxLenght);\n  }\n\n  public generate(nb: number) {\n    this.generateFor(\n      this.settings[this.s].file, nb);\n  }\n\n  private generateFor(fileName: string, toGenerate: number): void {\n    this.words = ['loading...'];\n    this.markov.loadWordsFromFile(fileName, this.http).subscribe(\n      () => {},\n      error => {},\n      () => {\n      this.words = [];\n      let count = 0;\n      while (count < toGenerate) {\n        this.words.push(this.markov.generateWord());\n        count++;\n      }\n    });\n}\n\n\n}\n","module.exports = \".generation {\\n  text-align: center;\\n  height: calc(100% - 161px);\\n  padding: 60px;\\n  font-size: 30px;\\n}\\n.generation .btn-container {\\n  margin-bottom: 50px;\\n}\\n.generation .btn-container select {\\n  font-size: 30px;\\n}\\n.generation .line {\\n  padding-bottom: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Zkcm91bWFndWV0L0NPREUvbWUvZ2VuLXdlYi9zcmMvYXBwL2dyYW1tYXIvZ3JhbW1hci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZ3JhbW1hci9ncmFtbWFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSwwQkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0FDQ0o7QURDSTtFQUNJLG1CQUFBO0FDQ1I7QURBUTtFQUNJLGVBQUE7QUNFWjtBRENJO0VBQ0ksbUJBQUE7QUNDUiIsImZpbGUiOiJzcmMvYXBwL2dyYW1tYXIvZ3JhbW1hci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5nZW5lcmF0aW9uIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNjFweCk7XG4gICAgcGFkZGluZzogNjBweDtcbiAgICBmb250LXNpemU6IDMwcHg7XG5cbiAgICAuYnRuLWNvbnRhaW5lciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgICAgIHNlbGVjdCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmxpbmUge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xuICAgIH1cbn0iLCIuZ2VuZXJhdGlvbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNjFweCk7XG4gIHBhZGRpbmc6IDYwcHg7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn1cbi5nZW5lcmF0aW9uIC5idG4tY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cbi5nZW5lcmF0aW9uIC5idG4tY29udGFpbmVyIHNlbGVjdCB7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn1cbi5nZW5lcmF0aW9uIC5saW5lIHtcbiAgcGFkZGluZy1ib3R0b206IDVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\ndeclare const RiGrammar: any;\n\n@Component({\n  selector: 'app-grammar',\n  templateUrl: './grammar.component.html',\n  styleUrls: ['./grammar.component.scss'],\n  animations: [\n    trigger('appear', [\n      transition(':enter', [\n        style({opacity: 0}),\n        animate('1s')\n      ])\n    ])\n  ]\n})\nexport class GrammarComponent implements OnInit {\n\n  grammars: string[] = [ 'FPS Games'];\n  selectedGrammar = 'FPS Games';\n  phrases: string[] = [];\n  grammar: any;\n  key = [\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\n                   \"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\n                   \"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"];\n  grammarDefinitions = {\n    'FPS Games': {\n      '<start>': [ '<first> <next>' ],\n      '<first>': [ '<main>', '<main>', '<main>', '<main>', '<from> <main>' ],\n      '<from>': [ '%Tom Clancy\\'s%%', '', '', '', '', '', '', '', ''],\n      '<next>': [ '%<main> <end>%%', '<number>', '%<end>%%'],\n      '<end>': [ '<main>', '<number>', 'GOTY', 'Ultimate', 'Director\\'s cut', 'Collector Edition', 'Platinum', '', '', '', '', '', '<next>' ],\n      '<main>': [ '<noun> <lig> <concept>', '<concept> <noun>', '<adjective> <noun>' ],\n      '<lig>': [ 'of', 'for', '\\'s'],\n      '<noun>': [ 'Medal', 'Fight', 'Band', 'Conflict', 'War', 'Gears', 'Weapons', 'Cell', 'Army', 'Assault', 'Combat', 'Ghost', 'Call', 'Warfare', 'Battlefield', 'Crisis', 'Shadow', 'Armor' ],\n      '<concept>': [ 'War', 'Honor', 'Brothers', 'Conflict', 'Terror', 'Infinity', 'Recon', 'Duty', 'Ops', 'Liberty', 'Justice', 'Annihilation', 'Chaos' ],\n      '<adjective>': [ 'Ultimate', 'Complete', 'Direct', 'Phantom', 'Total', 'Imminent', 'Close', 'Modern', 'Black', 'Lethal', 'Metal', 'Iron' ],\n      '<number>': [ 'NUMBER', 'ROMAN' ]\n    }\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    this.changeGrammar();\n  }\n\n  changeGrammar() {\n    this.grammar = new RiGrammar(this.grammarDefinitions[this.selectedGrammar]);\n  }\n\n  generate(nb: number) {\n    this.phrases = [];\n    for(let i = 0; i < nb; i++) {\n      let str = <string>this.grammar.expand();\n      while(str.indexOf('NUMBER') !== -1) {\n        str = str.replace('NUMBER', this.generateNumber(false));\n      }\n      while(str.indexOf('ROMAN') !== -1) {\n        str = str.replace('ROMAN', this.generateNumber(true));\n      }\n      \n      str = str.replace(/%%/g, '</span>');\n      str = str.replace(/%/g, '<span class=\"subtitle\">');\n      this.phrases.push(str)\n    }\n  }\n\n  generateNumber(roman: boolean): string {\n    if (roman) {\n        const num = Math.ceil(Math.random() * 12);\n        let digits = String(+num).split('');\n        let roman = '';\n        let i = 3;\n        while (i--) {\n          roman = (this.key[+digits.pop() + (i * 10)] || '') + roman;\n        }\n        return Array(+digits.join() + 1).join('M') + roman;\n    } else if (Math.random() > 0.5) {\n      return '' + Math.ceil(Math.random() * 10);\n    } else {\n      return '' + (Math.ceil(Math.random() * 200) + 1900);\n    }\n  }\n\n}\n","module.exports = \".generation {\\n  text-align: center;\\n  height: calc(100% - 161px);\\n  padding: 60px;\\n  font-size: 25px;\\n  /* Tooltip text */\\n  /* Show the tooltip text when you mouse over the tooltip container */\\n}\\n.generation .btn-container {\\n  margin-bottom: 50px;\\n}\\n.generation .stat {\\n  padding-left: 5px;\\n  padding-right: 5px;\\n  border: 0.5px solid white;\\n}\\n.generation .name, .generation .unique {\\n  font-weight: bold;\\n}\\n.generation .name {\\n  font-size: 20px;\\n}\\n.generation .power {\\n  font-style: italic;\\n}\\n.generation .tag {\\n  color: #aaa;\\n}\\n.generation .unique {\\n  font-size: 30px;\\n  color: magenta;\\n}\\n.generation .price {\\n  color: goldenrod;\\n}\\n@media (min-width: 750px) {\\n  .generation .item {\\n    width: 49%;\\n    height: 130px;\\n  }\\n}\\n@media (max-width: 750px) {\\n  .generation .item {\\n    width: 100%;\\n  }\\n}\\n.generation .item {\\n  float: left;\\n  font-size: 15px;\\n  padding: 10px 0px;\\n  border: 1px solid #555;\\n}\\n.generation .tooltip {\\n  position: relative;\\n  display: inline-block;\\n}\\n.generation .tooltip .tooltip-text {\\n  visibility: hidden;\\n  width: 200px;\\n  background-color: black;\\n  color: #fff;\\n  text-align: left;\\n  padding: 5px 0;\\n  border-radius: 6px;\\n  font-size: 15px !important;\\n  bottom: 25px;\\n  right: 0px;\\n  /* Position the tooltip text - see examples below! */\\n  position: absolute;\\n  z-index: 1;\\n}\\n.generation .tooltip:hover .tooltip-text {\\n  visibility: visible;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Zkcm91bWFndWV0L0NPREUvbWUvZ2VuLXdlYi9zcmMvYXBwL2xvb3QvbG9vdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbG9vdC9sb290LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSwwQkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBNERFLGlCQUFBO0VBaUJBLG9FQUFBO0FDMUVOO0FEREk7RUFDSSxtQkFBQTtBQ0dSO0FEQUk7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7QUNFUjtBRENJO0VBQ0ksaUJBQUE7QUNDUjtBREVJO0VBQ0ksZUFBQTtBQ0FSO0FER0k7RUFDSSxrQkFBQTtBQ0RSO0FESUk7RUFDSSxXQUFBO0FDRlI7QURLSTtFQUNJLGVBQUE7RUFDQSxjQUFBO0FDSFI7QURNSTtFQUNJLGdCQUFBO0FDSlI7QURPSTtFQUNJO0lBQ0ksVUFBQTtJQUNBLGFBQUE7RUNMVjtBQUNGO0FET0k7RUFDSTtJQUNJLFdBQUE7RUNMVjtBQUNGO0FET0k7RUFDSSxXQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esc0JBQUE7QUNMUjtBRFFJO0VBQ0ksa0JBQUE7RUFDQSxxQkFBQTtBQ05SO0FEVU07RUFDRSxrQkFBQTtFQUNBLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLDBCQUFBO0VBQ0EsWUFBQTtFQUNBLFVBQUE7RUFDQSxvREFBQTtFQUNBLGtCQUFBO0VBQ0EsVUFBQTtBQ1JSO0FEWU07RUFDRSxtQkFBQTtBQ1ZSIiwiZmlsZSI6InNyYy9hcHAvbG9vdC9sb290LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdlbmVyYXRpb24ge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDE2MXB4KTtcbiAgICBwYWRkaW5nOiA2MHB4O1xuICAgIGZvbnQtc2l6ZTogMjVweDtcblxuICAgIC5idG4tY29udGFpbmVyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICB9XG5cbiAgICAuc3RhdCB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG4gICAgICAgIGJvcmRlcjogMC41cHggc29saWQgd2hpdGU7XG4gICAgfVxuXG4gICAgLm5hbWUsIC51bmlxdWUge1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG5cbiAgICAubmFtZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICB9XG5cbiAgICAucG93ZXIge1xuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgfVxuXG4gICAgLnRhZyB7XG4gICAgICAgIGNvbG9yOiAjYWFhO1xuICAgIH1cblxuICAgIC51bmlxdWUge1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgIGNvbG9yOiBtYWdlbnRhO1xuICAgIH1cblxuICAgIC5wcmljZSB7XG4gICAgICAgIGNvbG9yOiBnb2xkZW5yb2Q7XG4gICAgfVxuXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc1MHB4KSB7XG4gICAgICAgIC5pdGVtIHtcbiAgICAgICAgICAgIHdpZHRoOiA0OSU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEzMHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NTBweCkge1xuICAgICAgICAuaXRlbSB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAuaXRlbSB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgICAgIHBhZGRpbmc6IDEwcHggMHB4O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjNTU1O1xuICAgIH1cblxuICAgIC50b29sdGlwIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8qIFRvb2x0aXAgdGV4dCAqL1xuICAgICAgLnRvb2x0aXAgLnRvb2x0aXAtdGV4dCB7XG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xuICAgICAgICBib3R0b206IDI1cHg7XG4gICAgICAgIHJpZ2h0OiAwcHg7XG4gICAgICAgIC8qIFBvc2l0aW9uIHRoZSB0b29sdGlwIHRleHQgLSBzZWUgZXhhbXBsZXMgYmVsb3chICovXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLyogU2hvdyB0aGUgdG9vbHRpcCB0ZXh0IHdoZW4geW91IG1vdXNlIG92ZXIgdGhlIHRvb2x0aXAgY29udGFpbmVyICovXG4gICAgICAudG9vbHRpcDpob3ZlciAudG9vbHRpcC10ZXh0IHtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgIH1cbn0iLCIuZ2VuZXJhdGlvbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNjFweCk7XG4gIHBhZGRpbmc6IDYwcHg7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgLyogVG9vbHRpcCB0ZXh0ICovXG4gIC8qIFNob3cgdGhlIHRvb2x0aXAgdGV4dCB3aGVuIHlvdSBtb3VzZSBvdmVyIHRoZSB0b29sdGlwIGNvbnRhaW5lciAqL1xufVxuLmdlbmVyYXRpb24gLmJ0bi1jb250YWluZXIge1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuLmdlbmVyYXRpb24gLnN0YXQge1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgcGFkZGluZy1yaWdodDogNXB4O1xuICBib3JkZXI6IDAuNXB4IHNvbGlkIHdoaXRlO1xufVxuLmdlbmVyYXRpb24gLm5hbWUsIC5nZW5lcmF0aW9uIC51bmlxdWUge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5nZW5lcmF0aW9uIC5uYW1lIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuLmdlbmVyYXRpb24gLnBvd2VyIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuLmdlbmVyYXRpb24gLnRhZyB7XG4gIGNvbG9yOiAjYWFhO1xufVxuLmdlbmVyYXRpb24gLnVuaXF1ZSB7XG4gIGZvbnQtc2l6ZTogMzBweDtcbiAgY29sb3I6IG1hZ2VudGE7XG59XG4uZ2VuZXJhdGlvbiAucHJpY2Uge1xuICBjb2xvcjogZ29sZGVucm9kO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc1MHB4KSB7XG4gIC5nZW5lcmF0aW9uIC5pdGVtIHtcbiAgICB3aWR0aDogNDklO1xuICAgIGhlaWdodDogMTMwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA3NTBweCkge1xuICAuZ2VuZXJhdGlvbiAuaXRlbSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbi5nZW5lcmF0aW9uIC5pdGVtIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgcGFkZGluZzogMTBweCAwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM1NTU7XG59XG4uZ2VuZXJhdGlvbiAudG9vbHRpcCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLmdlbmVyYXRpb24gLnRvb2x0aXAgLnRvb2x0aXAtdGV4dCB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgd2lkdGg6IDIwMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDVweCAwO1xuICBib3JkZXItcmFkaXVzOiA2cHg7XG4gIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50O1xuICBib3R0b206IDI1cHg7XG4gIHJpZ2h0OiAwcHg7XG4gIC8qIFBvc2l0aW9uIHRoZSB0b29sdGlwIHRleHQgLSBzZWUgZXhhbXBsZXMgYmVsb3chICovXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogMTtcbn1cbi5nZW5lcmF0aW9uIC50b29sdGlwOmhvdmVyIC50b29sdGlwLXRleHQge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Item } from './model/item';\nimport { LootGen } from './model/lootgen';\nimport { HttpClient } from '@angular/common/http';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-loot',\n  templateUrl: './loot.component.html',\n  styleUrls: ['./loot.component.scss'],\n  animations: [\n    trigger('appear', [\n      transition(':enter', [\n        style({opacity: 0}),\n        animate('1s')\n      ])\n    ])\n  ]\n})\nexport class LootComponent implements OnInit {\n\n  items: Item[];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n  }\n\n  public generateItems(nb: number): void {\n    LootGen.default(this.http).subscribe(\n        gen => {\n            this.items = [];\n            for (let i = 0; i < nb; i++) {\n                this.items.push(gen.gen());\n            }\n        }\n    );\n}\n\n\n}\n","import { Price } from './price';\n\nexport class Item {\n\n    static UNIQUE_THRESHOLD = 8;\n    public name: string;\n    public uniqueName: string;\n    public stats: Map<string, number> = new Map<string, number>();\n    public powers: string[] = [];\n    public tags: string[] = [];\n    public price: Price;\n\n    constructor(\n    ) {}\n\n    public addStat(stat: string, value: number) {\n        if (this.stats[stat]) {\n            this.stats.set(stat, this.stats[stat] + value);\n        } else {\n            this.stats.set(stat, value);\n        }\n    }\n\n    public addTag(tag: string) {\n        if (tag !== undefined && tag.trim() !== '' && this.tags.indexOf(tag) === -1) {\n            this.tags.push(tag);\n        }\n    }\n\n    public addPower(power: string) {\n        if (power !== undefined && power.trim() !== '' && this.powers.indexOf(power) === -1) {\n            this.powers.push(power);\n        }\n    }\n\n    public getStatString(statKey: string): string {\n        const value = this.stats.get(statKey);\n        if (statKey[statKey.length - 1] === '%') {\n            return statKey.substring(0, statKey.length - 1).replace('_', ' ') + (value < 0 ? ' ' : ' +') + value + '%'\n        } else {\n            return `${statKey.replace('_', ' ')} ${value < 0 ? '' : '+'} ${value}`;\n        }\n    }\n}\n","import { Observable, forkJoin, of } from 'rxjs';\nimport { Item } from './item';\nimport { Token } from './rule/token';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Sequence } from './rule/sequence';\nimport { NounGroup } from './rule/noungroup';\nimport { StringToken } from './rule/stringtoken';\nimport { MarkovCharGenerator } from 'src/app/markov/markovgenerator';\nimport { Price } from './price';\nimport { Terminal } from './terminal/terminal';\nimport { TerminalGenerator } from './terminal/terminalgenerator';\nimport { Adjective } from './terminal/adjective';\nimport { TerminalType } from './terminal/terminaltype';\nimport { Modifier } from './terminal/modifier';\nimport { Material } from './terminal/material';\nimport { Optional } from './rule/optional';\nimport { Or } from './rule/or';\nimport { NumberedNounGroup } from './rule/numberednoungroup';\nimport { Gear } from './terminal/gear';\nimport { Noun } from './terminal/noun';\nimport { Qualificatif } from './terminal/qualificatif';\n\nexport class LootGen {\n\n    static generators: Map<TerminalType, TerminalGenerator>;\n    static instance: LootGen;\n\n    start: Token;\n    markov: MarkovCharGenerator;\n\n    public static default(http: HttpClient): Observable<LootGen> {\n        if (!LootGen.instance) {\n            return forkJoin(\n                LootGen.getAllLines('gear.txt', http),\n                LootGen.getAllLines('nouns.txt', http),\n                LootGen.getAllLines('adjectives.txt', http),\n                LootGen.getAllLines('qualif.txt', http),\n                LootGen.getAllLines('modifier.txt', http),\n                LootGen.getAllLines('material.txt', http),\n                LootGen.getAllLines('names.txt', http)\n            ).pipe(\n                map(([gear, noun, adj, qualif, mod, mat, name]) => {\n                    LootGen.instance = new LootGen(gear, noun, adj, qualif, mod, mat, name);\n                    return LootGen.instance;\n                })\n            );\n        } else {\n            return of(LootGen.instance);\n        }\n    }\n\n    public static getAllLines(fileName: string, http: HttpClient): Observable<string[]> {\n        return http.get('/assets/' + fileName, {responseType: 'text'}).pipe(\n            map(text => text.split('\\n'))\n        );\n    }\n\n\n    public static random(from: number, to: number): number {\n        return Math.floor(Math.random() * (to - from + 1)) + from;\n    }\n\n    public static randomBetween(values: number[]): number {\n        return values[Math.floor(Math.random() * values.length)];\n    }\n\n    public static randomIndexWithChancesArray(chances: number[]) {\n        const percent = LootGen.random(0, 100);\n        let cumul = 0;\n        for (let i = 0; i < chances.length; i++) {\n            cumul += chances[i];\n            if (percent < cumul) {\n                return i;\n            }\n        }\n        return 0;\n    }\n\n    public constructor(\n        gear: string[], noun: string[], adj: string[],\n        qualif: string[], modifier: string[],\n        material: string[], names: string[]) {\n        LootGen.generators = new Map<TerminalType, TerminalGenerator>();\n        LootGen.generators.set(TerminalType.Gear, new TerminalGenerator(gear, s => Gear.parse(s)));\n        LootGen.generators.set(TerminalType.Noun, new TerminalGenerator(noun, s => Noun.parse(s)));\n        LootGen.generators.set(TerminalType.Adjective, new TerminalGenerator(adj, s => Adjective.parse(s)));\n        LootGen.generators.set(TerminalType.Qualificatif, new TerminalGenerator(qualif, s => Qualificatif.parse(s)));\n        LootGen.generators.set(TerminalType.Modifier, new TerminalGenerator(modifier, s => Modifier.parse(s)));\n        LootGen.generators.set(TerminalType.Material, new TerminalGenerator(material, s => Material.parse(s)));\n        this.loadUniqueNames(names);\n        this.defaultTree();\n    }\n\n\n    public defaultTree(): void {\n        const nounGroup = new NounGroup(\n            new StringToken('de la', 'des', 'du', 'des', 'de l\\''),\n            undefined, undefined, TerminalType.Noun,  0, 5);\n        const numberNounGroup = new NumberedNounGroup(\n            new StringToken('de la', 'des', 'du', 'des', 'de l\\''),\n            undefined, TerminalType.Noun, 0, 5);\n        this.start = new Sequence([\n            new NounGroup(undefined, undefined, false, TerminalType.Gear, 20, 20),\n            new Optional(\n                new Or([nounGroup, numberNounGroup], [70, 30]), 40)\n            ]\n        );\n    }\n\n    private loadUniqueNames(names: string[]): void {\n        this.markov = new MarkovCharGenerator(2, '$', 12);\n        this.markov.loadWords(names);\n    }\n\n\n    public generateUniqueName(): string {\n        return this.markov.generateWord();\n    }\n\n    public gen(): Item {\n        const item = new Item();\n        const p = new Price();\n        const res = this.start.gen(item, false, false, false, p).trim();\n        item.name = res.substring(0, 1).toUpperCase() + res.substring(1);\n        item.price = p;\n        if (item.stats.size + item.powers.length + item.tags.length > Item.UNIQUE_THRESHOLD) {\n            item.uniqueName = this.generateUniqueName();\n        }\n        return item;\n    }\n\n}\n","\n\nexport class Price {\n\n    subPrices: Price[] = [];\n    public source: string;\n    public value: number;\n    public operation: Operation;\n\n    public static parse(s: string, source: string): Price {\n        let op: Operation;\n        switch (s[0]) {\n            case '+':\n                op = '+';\n                break;\n            case '-':\n                op = '-';\n                break;\n            case '*':\n                op = '*';\n                break;\n            case '/':\n                op = '/';\n                break;\n            default:\n        }\n        const p = new Price();\n        p.operation = op;\n        p.value = Number(s.substring(1));\n        p.source = source;\n        return p;\n    }\n\n    public computeOp(cumul = 0): number {\n        switch (this.operation) {\n            case '+':\n                return cumul + this.value;\n            case '*':\n                return cumul * this.value;\n            case '-':\n                return cumul - this.value;\n            case '/':\n                return cumul / this.value;\n            default:\n                return cumul + this.value;\n        }\n    }\n\n    public compute(cumul = 0): number {\n        if (this.subPrices) {\n            let res = cumul;\n            // additions first\n            this.subPrices.forEach(p => {\n                if (p.operation) {\n                    if (p.operation !== '*' && p.operation !== '/') {\n                        res = p.computeOp(res);\n                    }\n                } else {\n                    res = p.compute(res);\n                }\n            });\n            // multiplications\n            this.subPrices.forEach(p => {\n                if (p.operation) {\n                    if (p.operation === '*' || p.operation === '/') {\n                        res = p.computeOp(res);\n                    }\n                }\n            });\n            return Math.max(0, res);\n        } else {\n            return this.computeOp(cumul);\n        }\n    }\n\n    public addPrices(prices: Price[]) {\n        prices.forEach(p => this.subPrices.push(p));\n    }\n\n    public addPrice(p: Price) {\n        this.subPrices.push(p);\n    }\n\n    public detail(tab = 0): string {\n        let res = '';\n        // additions first\n        this.subPrices.forEach(p => {\n            if (p.operation) {\n                if (p.operation !== '*' && p.operation !== '/') {\n                    res += `${this.spaces(tab)}[${p.source}] ${p.operation}${p.value}<br>`;\n                }\n            } else {\n                res += p.detail(tab + 1);\n            }\n        });\n        // multiplications\n        this.subPrices.forEach(p => {\n            if (p.operation) {\n                if (p.operation === '*') {\n                    res += `${this.spaces(tab)}[${p.source}] x${p.value}<br>`;\n                }\n                if (p.operation === '/') {\n                    res += `${this.spaces(tab)}[${p.source}] x${(1 / p.value).toFixed(2)}<br>`;\n                }\n            }\n        });\n        return res;\n    }\n\n    private spaces(tabs: number) {\n        let res = '';\n        for (let i = 0; i < tabs; i++) {\n            res += '&nbsp;&nbsp;';\n        }\n        return res;\n    }\n\n}\n\nexport type Operation = '+' | '*' | '-' | '/';\n","import { Token } from './token';\nimport { StringToken } from './stringtoken';\nimport { Price } from '../price';\nimport { Item } from '../item';\nimport { LootGen } from '../lootgen';\nimport { TerminalType } from '../terminal/terminaltype';\nimport { Adjective } from '../terminal/adjective';\nimport { Noun } from '../terminal/noun';\nimport { Material } from '../terminal/material';\nimport { QualificatifGroup } from './qualificatifgroup';\n\nexport class NounGroup implements Token {\n\n    constructor(\n        public prefix: StringToken,\n        public suffix: StringToken,\n        public plural: boolean,\n        public type: TerminalType,\n        private qualifChance: number,\n        private materialChance: number,\n        public nbAdj = 0,\n    ) {}\n\n    public gen(item: Item, dontcare: boolean, osef: boolean, ahah: boolean, p: Price): string {\n        this.nbAdj = LootGen.randomBetween([0, 0, 1, 1, 1, 2, 2, 3]);\n        return this.getTokens(item, p).join(' ');\n    }\n\n    protected getTokens(item: Item, p: Price): string[] {\n        // get noun\n        const actualNoun = LootGen.generators.get(this.type).gen<Noun>();\n        p.addPrice(actualNoun.price);\n\n        // get gender and plurality\n        const masculine = actualNoun.masculine;\n        let plural = this.plural !== undefined ? this.plural : Math.random() > 0.5;\n        let vowel = actualNoun.beginsWithVowel();\n        if (actualNoun.plural === '') {\n            plural = false;\n        }\n\n        // generate strings\n        const adjBef: Adjective[] = [];\n        const adjAft: Adjective[] = [];\n        let a: Adjective;\n        let i = this.nbAdj;\n        while (i > 0) {\n            a = LootGen.generators.get(TerminalType.Adjective).gen<Adjective>();\n            // check if already present\n            if (!adjAft.includes(a) && !adjBef.includes(a)) {\n                if (a.goesBefore) {\n                    adjBef.push(a);\n                } else {\n                    adjAft.push(a);\n                }\n                p.addPrice(a.price);\n                i--;\n            }// else ignore adj and generate another one\n        }\n        if (adjBef.length > 0) {\n            vowel = adjBef[0].beginsWithVowel();\n        }\n\n        const n = actualNoun.gen(item, masculine, plural);\n\n        const pref = this.prefix !== undefined ? this.prefix.gen(item, masculine, plural, vowel, p) : '';\n        const suff = this.suffix !== undefined ? this.suffix.gen(item, masculine, plural, vowel, p) : '';\n\n        const adjAftStr = this.map(item, masculine, plural, adjAft).join(' ');\n        const adjBefStr = this.map(item, masculine, plural, adjBef).join(' ');\n\n        const tokens = [pref, adjBefStr, n, adjAftStr, suff];\n\n\n        // material\n        if (LootGen.random(0, 100) < this.materialChance) {\n            // add material\n            const material = LootGen.generators.get(TerminalType.Material).gen<Material>();\n            tokens.push(material.gen(item, masculine, plural));\n            p.addPrice(material.price);\n        }\n\n        // qualificatif\n        if (LootGen.random(0, 100) < this.qualifChance) {\n            const price = new Price();\n            tokens.push(new QualificatifGroup().gen(item, masculine, plural, vowel, price));\n            p.addPrice(price);\n        }\n\n        return tokens;\n    }\n\n    private map(item: Item, masculine: boolean,  plural: boolean, adjAft: Adjective[]): string[] {\n        return adjAft.map(a => a.gen(item, masculine, plural));\n    }\n}\n","import { NounGroup } from './noungroup';\nimport { StringToken } from './stringtoken';\nimport { Item } from '../item';\nimport { Price } from '../price';\nimport { TerminalType } from '../terminal/terminaltype';\n\nexport class NumberedNounGroup extends NounGroup {\n\n    constructor(\n        prefix: StringToken,\n        suffix: StringToken,\n        type: TerminalType, qualifChance: number,\n        materialChance: number) {\n        super(prefix, suffix, true, type,  qualifChance, materialChance);\n    }\n\n    public getTokens(item: Item, p: Price): string[] {\n        const tokens = super.getTokens(item, p);\n        tokens.splice(1, 0, '' + Math.floor(Math.pow((Math.random() * 15 + 1), 2)));\n        return tokens;\n    }\n}\n","import { Token } from './token';\nimport { Price } from '../price';\nimport { Item } from '../item';\n\nexport class Optional implements Token {\n\n    constructor(\n        private token: Token,\n        private chance: number\n    ) {}\n\n    public gen(item: Item, masculine: boolean, plural: boolean, vowel: boolean, p: Price): string {\n        if (Math.random() < (this.chance / 100.0)) {\n            const price = new Price();\n            p.addPrice(price);\n            return this.token.gen(item, masculine, plural, vowel, price);\n\n        } else {\n            return '';\n        }\n    }\n\n}\n","import { Token } from './token';\nimport { Price } from '../price';\nimport { Item } from '../item';\nimport { LootGen } from '../lootgen';\n\nexport class Or implements Token {\n\n    constructor(\n        private tokens: Token[],\n        private chances: number[]\n    ) {}\n\n\n    public gen(item: Item, masculine: boolean, plural: boolean, vowel: boolean, p: Price): string {\n        // choose one at random\n        return this.tokens[LootGen.randomIndexWithChancesArray(this.chances)].gen(item, masculine, plural, vowel, p);\n    }\n\n}\n","import { Token } from './token';\nimport { StringToken } from './stringtoken';\nimport { Price } from '../price';\nimport { Item } from '../item';\nimport { TerminalType } from '../terminal/terminaltype';\nimport { LootGen } from '../lootgen';\nimport { Adjective } from '../terminal/adjective';\nimport { Noun } from '../terminal/noun';\n\nexport class QualificatifGroup implements Token {\n\n    private type: TerminalType;\n    private nbAdj: number;\n    private pref = new StringToken('de la', 'des', 'du', 'des', 'de l\\'');\n\n    public gen(item: Item, masculine: boolean, plural: boolean, vowel: boolean, p: Price): string {\n        this.type = LootGen.random(0, 100) < 50 ? TerminalType.Gear : TerminalType.Noun;\n        this.nbAdj = LootGen.randomBetween([0, 0, 0, 1, 1, 1, 2, 2]);\n        return '\\'' + this.getToken(item, masculine, plural, p).trim() + '\\'';\n    }\n\n    protected getToken(item: Item, masculineParent: boolean, pluralParent: boolean, p: Price): string {\n        // get noun\n        const actualNoun = LootGen.generators.get(this.type).gen<Noun>();\n        p.addPrice(actualNoun.price);\n\n        // get gender and plurality\n        const masculine = actualNoun.masculine;\n        const plural = actualNoun.plural === '' ? false : Math.random() > 0.5;\n        let vowel = StringToken.vowels.indexOf(actualNoun.get(plural).substring(0, 1)) !== -1;\n\n        // generate strings\n        const adjBef: Adjective[] = [];\n        const adjAft: Adjective[] = [];\n        let a: Adjective;\n        for (let i = 0; i < this.nbAdj; i++) {\n            a = LootGen.generators.get(TerminalType.Adjective).gen<Adjective>();\n            if (a.goesBefore) {\n                adjBef.push(a);\n            } else {\n                adjAft.push(a);\n            }\n            p.addPrice(a.price);\n        }\n        if (adjBef.length > 0) {\n            vowel = adjBef[0].beginsWithVowel();\n        }\n        const qualif = LootGen.generators.get(TerminalType.Qualificatif).gen();\n        const q = qualif.gen(item, masculineParent, pluralParent);\n        p.addPrice(qualif.price);\n\n        const n = actualNoun.gen(item, masculine, plural);\n\n        const pref = this.pref !== undefined ? this.pref.gen(item, masculine, plural, vowel, p) : '';\n\n        const adjAftStr = this.map(item, masculine, plural, adjAft).join(' ');\n        const adjBefStr = this.map(item, masculine, plural, adjBef).join(' ');\n\n        return [q, pref, adjBefStr, n, adjAftStr].join(' ');\n    }\n\n    private map(item: Item, masculine: boolean,  plural: boolean, adjAft: Adjective[]): string[] {\n        return adjAft.map(a => a.gen(item, masculine, plural));\n    }\n\n}\n","import { Token } from './token';\nimport { Price } from '../price';\nimport { Item } from '../item';\n\nexport class Sequence implements Token {\n\n    constructor(private tokens: Token[]) {}\n\n    public gen(item: Item, masculine: boolean, plural: boolean, vowel: boolean, p: Price): string {\n        const sequence: string[] = [];\n        this.tokens.forEach(t => {\n            const price = new Price();\n            sequence.push(t.gen(item, masculine, plural, vowel, price));\n            p.addPrice(price);\n        });\n        return sequence.join(' ');\n    }\n\n}\n","import { LootGen } from '../lootgen';\nimport { Price } from '../price';\nimport { Item } from '../item';\nimport { Token } from './token';\n\nexport class StringToken implements Token {\n\n    public static vowels = 'aeiouyéèàêôîâû';\n\n    constructor(\n        public feminineSingular: string,\n        public femininePlural: string,\n        public masculineSingular: string,\n        public masculinePlural: string,\n        public singularVowel: string\n    ) {}\n\n    public gen(item: Item, masculine: boolean, plural: boolean, vowel: boolean, p: Price) {\n        return masculine\n            ? (plural ? this.masculinePlural : (vowel ? this.singularVowel : this.masculineSingular))\n            : (plural ? this.femininePlural : (vowel ? this.singularVowel : this.feminineSingular));\n    }\n\n}\n","import { Terminal } from './terminal';\nimport { Item } from '../item';\nimport { Modifier } from './modifier';\nimport { LootGen } from '../lootgen';\nimport { TerminalType } from './terminaltype';\nimport { StringToken } from '../rule/stringtoken';\nimport { Price } from '../price';\n\nexport class Adjective extends Terminal {\n\n    public static parse(s: string): Adjective {\n        const split = s.split('\\.', 9);\n        if (split.length !== 9) {\n            console.error(s + ' is not a valid Adjective');\n        }\n\n        const adj = new Adjective('B' === split[0], split[1], split[2], split[3], split[4], undefined);\n        // stat\n        adj.stats = new Map<string, number>();\n        split[5].split('\\|').forEach(stat => {\n            if (stat.indexOf('=') !== -1) {\n                const statSplit = stat.split('=');\n                adj.stats.set(statSplit[0], Number(statSplit[1]));\n            }\n        });\n        // tag\n        adj.tags = split[6].split('\\|');\n\n        // power\n        adj.powers = split[7].split('\\|');\n\n        // price\n        adj.price = Price.parse(split[8], split[1]);\n\n        return adj;\n    }\n\n    constructor(\n        public goesBefore: boolean,\n        public masculineSingular: string,\n        public masculinePlural: string,\n        public feminineSingular: string,\n        public femininePlural: string,\n        private mod: Modifier\n    ) {\n        super();\n    }\n\n    public gen(item: Item, masculine: boolean, plural: boolean): string {\n\n        if (this.mod !== undefined) {\n            this.addStatsTagsAndPowers(item, this.mod.factor);\n            return this.mod.gen(item, masculine, plural) + ' '\n                + this.get(masculine, plural);\n        } else {\n            this.addStatsTagsAndPowers(item);\n            return this.get(masculine, plural);\n        }\n    }\n\n    private get(masculine: boolean, plural: boolean): string {\n        return masculine\n            ? plural ? this.masculinePlural : this.masculineSingular\n            : plural ? this.femininePlural : this.feminineSingular;\n    }\n\n    public beginsWithVowel(): boolean {\n        if (Math.random() < 0.3) {\n            this.mod = LootGen.generators.get(TerminalType.Modifier).gen();\n            return StringToken.vowels.indexOf(this.mod.value.substring(0, 1)) !== -1;\n        } else {\n            this.mod = undefined;\n            return StringToken.vowels.indexOf(this.masculinePlural.substring(0, 1)) !== -1;\n        }\n    }\n\n}\n","import { Noun } from './noun';\n\nexport class Gear extends Noun {\n\n}\n","import { Item } from '../item';\nimport { Terminal } from './terminal';\nimport { Price } from '../price';\n\nexport class Material extends Terminal {\n\n    private material: string;\n\n\n    public static parse(s: string): Material {\n        const split = s.split('\\.', 5);\n        if (split.length !== 5) {\n            console.error(s + ' is not a valid Material');\n        }\n        const mat = new Material();\n        mat.material = split[0];\n        // stat\n        mat.stats = new Map<string, number>();\n        split[1].split('\\|').forEach(stat => {\n            if (stat.indexOf('=') !== -1) {\n                const statSplit = stat.split('=');\n                mat.stats.set(statSplit[0], Number(statSplit[1]));\n            }\n        });\n        // tag\n        mat.tags = split[2].split('\\|');\n\n        // power\n        mat.powers = split[3].split('\\|');\n\n        mat.price = Price.parse(split[4], split[0]);\n        return mat;\n    }\n\n    public gen(item: Item, masculine: boolean, plural: boolean): string {\n        this.addStatsTagsAndPowers(item);\n        return this.material;\n    }\n\n\n}\n","import { Item } from '../item';\nimport { Terminal } from './terminal';\n\nexport class Modifier extends Terminal {\n\n    public static parse(s: string): Modifier {\n        const split = s.split('\\|', 2);\n        if (split.length !== 2) {\n            console.error(s + 'is not a valid Modifier');\n        }\n        return new Modifier(split[0], Number(split[1]));\n    }\n\n    constructor(\n        public value: string,\n        public factor: number\n    ) {\n        super();\n    }\n\n    public gen(item: Item, masculine: boolean, plural: boolean): string {\n        return this.value;\n    }\n\n}\n","import { Terminal } from './terminal';\nimport { Item } from '../item';\nimport { StringToken } from '../rule/stringtoken';\nimport { Price } from '../price';\n\nexport class Noun extends Terminal {\n\n    public masculine: boolean;\n    public singular: string;\n    public plural: string;\n\n\n    /**\n     * Format is <code>[MF].singularform.pluralform.stat1=statvalue1|stat2=statvalue2.tag1|tag2|tag3.power 1|another power\\n</code>\n     */\n    public static parse(s: string): Noun {\n        const split = s.split('\\.', 7);\n        if (split.length !== 7) {\n            console.error(s + ' is not a valid Noun');\n        }\n        const noun = new Noun();\n        // gender\n        noun.masculine = 'M' === split[0];\n        // singular/plural\n        noun.singular = split[1];\n        noun.plural = split[2];\n        // stat\n        noun.stats = new Map<string, number>();\n        split[3].split('\\|').forEach(stat => {\n            if (stat.indexOf('=') !== -1) {\n                const statSplit = stat.split('=');\n                noun.stats.set(statSplit[0], Number(statSplit[1]));\n            }\n        });\n        // tag\n        noun.tags = split[4].split('\\|');\n\n        // power\n        noun.powers = split[5].split('\\|');\n\n        noun.price = Price.parse(split[6], split[1]);\n\n        return noun;\n    }\n\n    public get(plural: boolean): string {\n        return plural ? this.plural : this.singular;\n    }\n\n    public gen(item: Item, masculine: boolean, plural: boolean): string {\n        this.addStatsTagsAndPowers(item);\n        return this.get(plural);\n    }\n\n\n    public beginsWithVowel(): boolean {\n        return StringToken.vowels.indexOf(this.singular.substring(0, 1)) !== -1;\n    }\n\n}\n","import { Terminal } from './terminal';\nimport { Item } from '../item';\nimport { Price } from '../price';\n\nexport class Qualificatif extends Terminal {\n\n    public feminineSingular: string;\n    public femininePlural: string;\n    public masculineSingular: string;\n    public mascuinePlural: string;\n\n    public static parse(s: string): Qualificatif {\n        const split = s.split('\\.', 8);\n        if (split.length !== 8) {\n            console.error(s + ' is not a valid Qualificatif');\n        }\n        const qual = new Qualificatif();\n        // singular/plural\n        qual.masculineSingular = split[0];\n        qual.mascuinePlural = split[1];\n        qual.feminineSingular = split[2];\n        qual.femininePlural = split[3];\n        // stat\n        qual.stats = new Map<string, number>();\n        split[4].split('\\|').forEach(stat => {\n            if (stat.indexOf('=') !== -1) {\n                const statSplit = stat.split('=');\n                qual.stats.set(statSplit[0], Number(statSplit[1]));\n            }\n        });\n        // tag\n        qual.tags = split[5].split('\\|');\n\n        // power\n        qual.powers = split[6].split('\\|');\n\n        qual.price = Price.parse(split[7], split[0]);\n        return qual;\n    }\n\n    public gen(item: Item, masculine: boolean, plural: boolean) {\n        this.addStatsTagsAndPowers(item);\n        return ' ' + this.get(masculine, plural);\n    }\n\n    private get(masculine: boolean, plural: boolean) {\n        return masculine\n            ? plural ? this.mascuinePlural : this.masculineSingular\n            : plural ? this.femininePlural : this.feminineSingular;\n    }\n\n\n}\n","import { Item } from '../item';\nimport { Price } from '../price';\n\nexport abstract class Terminal {\n    public tags: string[];\n    public stats: Map<string, number>;\n    public powers: string[];\n    public price: Price;\n\n    public init() {\n        this.tags = [];\n        this.stats = new Map<string, number>();\n        this.powers = [];\n    }\n\n    public abstract gen(item: Item, masculine: boolean, plural: boolean): string;\n\n    protected addStatsTagsAndPowers(item: Item, factor = 1): void {\n        this.stats.forEach((value, key) =>\n            item.addStat(key, value * factor)\n        );\n        this.powers.forEach(p => item.addPower(p));\n        this.tags.forEach(t => item.addTag(t));\n    }\n\n}\n","import { Terminal } from './terminal';\n\nexport class TerminalGenerator {\n\n    private pool: Terminal[];\n    constructor(items: string[], parsingFun: (s: string) => Terminal) {\n        this.pool = items.map(i => parsingFun(i));\n    }\n\n    public gen<T extends Terminal>(): T {\n        return this.pool[Math.floor(Math.random() * this.pool.length)] as T;\n    }\n\n}\n","\nexport enum TerminalType {\n    Adjective, Gear, Noun, Material, Modifier, Qualificatif\n}\n","export interface EndingChecker<T> {\n    isEnd(toCheck: T): boolean;\n}\n\nexport class StringEndingChecker implements EndingChecker<string> {\n\n    constructor(private end: string) {}\n\n    isEnd(t: string): boolean {\n        return t.charAt(t.length - 1) === this.end;\n    }\n}\n","import { Probas } from './probas';\nimport { StringEndingChecker } from './endingchecker';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nexport class MarkovCharGenerator {\n    constructor(\n        private factor: number,\n        private end: string,\n        private max: number) {}\n    private probas = new Map<string, Probas<string>>();\n    private checker = new StringEndingChecker(this.end);\n\n// OUT\npublic generateWord(): string {\n    // starting with empty token\n    let token = '';\n    let word = '';\n    let nextChar = '';\n    // only stop when reaching end character or max length\n    while (true) {\n        // get next char chain\n        token = this.probas.get(token).random(word.length > this.max);\n\n        // get the last char\n        nextChar = token.charAt(token.length - 1);\n\n        if (nextChar === this.end) {\n            // end char, we stop!\n            break;\n        }\n\n        // append it to the word\n        word = word.concat(nextChar);\n    }\n\n    return word.toString();\n}\n\n// IN\npublic loadWord(w: string) {\n    // get chars from string and append the end char at then end\n    const chars = w + this.end;\n\n    let charChain = chars.substring(0, this.factor);\n    let currentToken = '';\n\n    for (const char of chars) {\n        // shift chain to the rigth\n        // nic >> ice (+e)\n        charChain = charChain.substring(1) + char;\n        const p = this.probas.get(currentToken);\n        if (p === undefined) {\n            // new proba\n            this.probas.set(currentToken, new Probas<string>(charChain, this.checker));\n        } else {\n            p.addValue(charChain);\n        }\n        currentToken = charChain;\n    }\n}\n\npublic loadWords(words: string[]) {\n    words.forEach(w => this.loadWord(w));\n}\n\npublic loadWordsFromFile(fileName: string, http: HttpClient): Observable<void> {\n    if (this.probas.size === 0) {\n        return this.readResource(fileName, http);\n    } else {\n        return of();\n    }\n}\n\nprivate readResource(fileName: string, http: HttpClient): Observable<void> {\n    return http.get('/assets/' + fileName, {responseType: 'text'}).pipe(\n        map(text => {\n            this.loadWords(text.split('\\n'));\n        })\n    );\n}\n}\n","import { Probas } from './probas';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { StringEndingChecker } from './endingchecker';\n\nexport class MarkovWordGenerator {\n    private probas = new Map<string, Probas<string>>();\n    private end = '$';\n    private endChecker = new StringEndingChecker(this.end);\n\n    constructor(\n        private factor: number,\n        private max: number) {}\n\n// OUT\npublic generateSentence(): string {\n    // starting with empty token\n    let token = 'ST$RT';\n    const sentence = [];\n    let nextWord = '';\n    let tokenAsWords: RegExpMatchArray;\n    let prob: Probas<string>;\n    // only stop when reaching end character or max length\n    while (sentence.length < 200) {\n        // get next word chain\n        prob = this.probas.get(token);\n        if (!prob) {\n            console.log(token);\n        }\n        token = prob.random(sentence.length > this.max);\n\n        // get the last word (only the last is new, the rest is what we have already)\n        // e.g. \"the last word\" will generate \"last word is\". We only get \"is\"\n        tokenAsWords = token.match(/.*?[\\.\\s]+?/g);\n        nextWord = tokenAsWords[tokenAsWords.length - 1];\n\n        if (token.charAt(token.length -1) === this.end) {\n            // end char, we stop!\n            break;\n        }\n\n        // append it to the sentence\n        if (sentence.length === 0) {\n            sentence.push(token);\n        } else {\n            sentence.push(nextWord);\n        }\n    }\n\n    return sentence.join('');\n}\n\n// IN\npublic loadText(t: string) {\n    // split into sentences\n    const sentences = t.match( /[^\\.!\\?]+[\\.!\\?]+/g );\n    sentences.forEach(\n        (s, i) => {\n            if (i % 100 === 0) {console.log('LOADING SENTENCE ' + i + ' /' + sentences.length);}\n            this.loadSentence(s);\n        }\n    );\n}\n\npublic loadSentence(w: string) {\n    // get chars from string and append the end char at then end\n    const words = w.match(/.*?[\\.\\s]+?/g);\n    if (words === null) {\n        return;\n    }\n    words.push(this.end);\n    let wordChain;\n    let currentToken = 'ST$RT';\n\n    for (let i = 0; (i + this.factor) < words.length + 1; i++) {\n        wordChain = words.slice(i, i + this.factor).join('');\n        const p = this.probas.get(currentToken);\n        if (p === undefined) {\n            // new proba\n            this.probas.set(currentToken, new Probas<string>(wordChain, this.endChecker));\n        } else {\n            p.addValue(wordChain);\n        }\n        currentToken = wordChain;\n    }\n}\n\n\npublic loadSentencesFromFile(fileName: string, http: HttpClient): Observable<void> {\n    if (this.probas.size === 0) {\n        return this.readResource(fileName, http);\n    } else {\n        return of();\n    }\n}\n\nprivate readResource(fileName: string, http: HttpClient): Observable<void> {\n    return http.get('/assets/' + fileName, {responseType: 'text'}).pipe(\n        map(text => {\n            this.loadText(text);\n        })\n    );\n}\n}\n","import { EndingChecker } from './endingchecker';\nimport { PoolValidator } from './poolvalidator';\n\nexport class Probas<T> {\n    private sum = 0;\n    private possibleValues = new Map<T, number>();\n\n    // when building a proba at least one value must be provided\n    constructor(\n        firstPossibleValue: T,\n        private endingChecker: EndingChecker<T>) {\n        this.addValue(firstPossibleValue);\n    }\n\n    // OUT\n    public random(endIfPossible: boolean, validator?: PoolValidator<T>): T {\n        // the word needs to end, get the first token that is valid\n        if (endIfPossible) {\n            this.possibleValues.forEach((value, key) => {\n                if (this.endingChecker.isEnd(key)) {\n                    return key;\n                }\n            });\n        }\n\n        // do we need to filter ?\n        let possibleValuesToUse = this.possibleValues;\n        let sumToUse = this.sum;\n        if (validator) {\n            possibleValuesToUse = new Map<T, number>();\n            sumToUse = 0;\n            this.possibleValues.forEach((value, key) => {\n                if (validator.endIsInPool(key)) {\n                    possibleValuesToUse.set(key, value);\n                    sumToUse += value;\n                }\n            });\n        }\n\n        // random int between 0 and sum\n        const r = Math.floor(Math.random() * sumToUse);\n\n        let cumul = 0;\n        for (const e of possibleValuesToUse) {\n            cumul += e[1];\n            if (r < cumul) {\n                return e[0];\n            }\n        }\n        // should not happen\n        return undefined;\n    }\n\n    // IN\n    public addValue(value: T): void {\n        const p = this.possibleValues.get(value);\n        if (p !== undefined) {\n            // add\n            this.possibleValues.set(value, p + 1);\n        } else {\n            // new\n            this.possibleValues.set(value, 1);\n        }\n        // increment global sum\n        this.sum++;\n    }\n\n    public addValues(values: T[]): void {\n        values.forEach(v => this.addValue(v));\n    }\n\n}\n","module.exports = \".generation {\\n  text-align: center;\\n  height: calc(100% - 161px);\\n  padding: 60px;\\n  font-size: 25px;\\n}\\n.generation .btn-container {\\n  margin-bottom: 50px;\\n}\\n.generation .btn-container select {\\n  font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Zkcm91bWFndWV0L0NPREUvbWUvZ2VuLXdlYi9zcmMvYXBwL25vdGFib3Qvbm90YWJvdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbm90YWJvdC9ub3RhYm90LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSwwQkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0FDQ0o7QURDSTtFQUNJLG1CQUFBO0FDQ1I7QURBUTtFQUNJLGVBQUE7QUNFWiIsImZpbGUiOiJzcmMvYXBwL25vdGFib3Qvbm90YWJvdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5nZW5lcmF0aW9uIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxNjFweCk7XG4gICAgcGFkZGluZzogNjBweDtcbiAgICBmb250LXNpemU6IDI1cHg7XG5cbiAgICAuYnRuLWNvbnRhaW5lciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gICAgICAgIHNlbGVjdCB7XG4gICAgICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLmdlbmVyYXRpb24ge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gMTYxcHgpO1xuICBwYWRkaW5nOiA2MHB4O1xuICBmb250LXNpemU6IDI1cHg7XG59XG4uZ2VuZXJhdGlvbiAuYnRuLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG4uZ2VuZXJhdGlvbiAuYnRuLWNvbnRhaW5lciBzZWxlY3Qge1xuICBmb250LXNpemU6IDMwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { MarkovWordGenerator } from '../markov/markovwordgenerator';\n\n@Component({\n  selector: 'app-notabot',\n  templateUrl: './notabot.component.html',\n  styleUrls: ['./notabot.component.scss'],\n  animations: [\n    trigger('appear', [\n      transition(':enter', [\n        style({opacity: 0}),\n        animate('1s')\n      ])\n    ])\n  ]\n})\nexport class NotabotComponent implements OnInit {\n\n  public settings = { file: 'lexicon.txt', factor: 2, end: '$', maxLenght: 50 };\n  public s: string;\n\n  public words: string[] = [];\n\n  public markov: MarkovWordGenerator;\n\n  constructor(private http: HttpClient) {\n    this.markov = new MarkovWordGenerator(this.settings.factor, this.settings.maxLenght);\n  }\n\n  ngOnInit() {\n  }\n\n  public generate(nb: number) {\n    this.generateFor(\n      this.settings.file, nb);\n  }\n\n  private generateFor(fileName: string, toGenerate: number): void {\n    this.words = ['loading...'];\n    this.markov.loadSentencesFromFile(fileName, this.http).subscribe(\n      () => {},\n      error => {},\n      () => {\n      this.words = [];\n      let count = 0;\n      while (count < toGenerate) {\n        this.words.push(this.markov.generateSentence());\n        count++;\n      }\n    });\n}\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}